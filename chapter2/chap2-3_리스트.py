'''
    1. 리스트 생성
    리스트 명 = [요소,요소,요소,요소,...]
    리스트 안에 아무것도 없을 수도 있고
    리스트 안에 리스트가 있을 수도 있고... [1,2,3,[one,shot,two,shot]]
    리스트 안엔 어떤 자료형이든 쌉가능
    
    * 빈 리스트 : a = list()로도 생성가능
    
    
    2. 리스트의 인덱싱과 슬라이싱
    - 리스트의 인덱싱
    배열처럼 list[index]로 적어주면 되고 0부터 시작임
    list[-1] : 뒤에서 첫 번째 요소
    
'''
a=[1,2,3,['a','b','c']]
# print(a[1]) ## 2
# print(a[-1]) ## ['a','b','c']

'''
    ['a','b','c']의 값을 꺼낼 수 있을까..

'''

# for tmp in a[-1]:
    # print(tmp) ## a,b,c

# print(a[-1][1]) ## b 

# print(a[-1][2]) ## c

'''
    - 삼중리스트
    자주 쓰진 않지만 알아두는 것이 좋음
'''

a = [1,2,['a','b',['Lite','on']]]
# print(a[2][2][1]) ## on
# print(a[2][2][0]) ## Lite

'''
    3. 리스트의 슬라이싱
    index 필드에 전에 하던 것처럼 지정해주면 됨 > 원본 리스트를
    변형시키지 않음
    문자열에서 했던 것과 완벽히 일치

'''
a=[1,2,3,4,5]
a[0:2]
# print(a[0:2]) ## [1,2]

a=[1,2,3,4,5]
b=a[:2]
c=a[2:]
# print(a) ##[1, 2, 3, 4, 5]
# print(b) ##[1, 2]
# print(c) ##[3, 4, 5]

'''
    - 중첩된 리스트에서 슬라이싱 하기
    리스트가 포함된 중첩 리스트도 똑같이 슬라이싱 해주면 됨

'''
a=[1,2,3,['a','b','c']]
# print(a[-1][:1]) ## 'a'

'''
    4. 리스트 연산하기
    - 리스트 더하기
    + : 더할 수 있음
    - 리스트 반복하기
    * : 반복할 수 있음

'''

a=[1,2,3]
b=[4,5,6]
# print(a+b) ## [1,2,3,4,5,6]

# print(a*3) ## [1,2,3,1,2,3,1,2,3]


'''
    - 리스트 길이 구하기 : len(list)
    튜플이나 딕셔너리에서도 사용됨.
'''

'''
    ** 초보자가 범하기 쉬운 리스트 연산 오류
    a=[1,2,3]
    a[2]+"hi"
    의 결과값은?
    
    typeError 발생!
    
    정수와 문자열은 더할 수 없는데, 더하려고 해서 오류가 난 것.
    이럴 때 할 수 있는 방법은 정수를 문자로 변경시키는 것 
    
    >> str(a[2])
    str함수는 정수나 실수를 문자열의 형태로 바꾸어주는 파이썬의 내장 함수이다.

'''

a=[1,2,3]
# print(str(a[1])+'hi') ## 2hi


'''
    5. 리스트의 수정과 삭제
    리스트는 값을 수정하거나 삭제가 가능하다.
    - 수정 list[index] = 수정값
'''

a=[1,2,3]
a[2]=4
# print(a) ##[1,2,4]

'''
    - del 함수 사용해 리스트 요소 삭제하기
    del(list[index])
    del list[index]
    del object(모든 자료형 쌉가능)
'''
# del(a[2])
# print(a) ##[1,2]
# del a[0]
# print(a) ##[2]

'''
    리스트의 요소를 삭제하는 방법은 2가지가 더 있다.
    리스트의 remove, pop함수를 이용하는 방법이다.
'''

'''
    6. 리스트 관련 함수들 >> 모두 다 리스트를 변경시킴
    - 리스트에 요소 추가 : append
    - 리스트 정렬 : sort
    - 리스트 뒤집기 : reverse
    - 위치 반환 : index
    - 리스트에 요소 삽입 : insert
    - 리스트에 요소 제거 : remove
    - 리스트 요소 끄집어내기 : pop
    - 리스트에 포함된 요소 x의 개수 세기 : count
    - 리스트 확장 : extend

'''
# 리스트 삽입
a=[1,2,4]
a.append(5)
# print(a) ##[1,2,4,5]


# 리스트 정렬
a=[16,1,2,10,2]
a.sort()
# print(a) ##[1,2,2,10,16]

'''
    문자도 마찬가지로 알파벳 순서로 정렬이 가능
'''

a=['z','b','c']
a.sort()
# print(a) ## ['b','c','z']
# sort() >> 리스트를 바꿈

# 리스트 뒤집기
a=['a','c','b']
a.reverse()
#print(a) ## ['b','c','a']

# 위치 반환 : 리스트에 x값이 있으면 x의 위치 값을 돌려줌
a=[1,2,3]
# print(a.index(3)) ## 2
# print(a.index(1)) ## 0

# print(a.index(100))## Error! 값 100은 리스트에 존재하지 않기 때문이다

# 리스트에 요소 삽입
# insert(a,b) : a 위치에 b 삽입
a=[1,2,3]
a.insert(0,100)
# print(a) ## [100,1,2,3]

# 리스트 요소 제거
# remove(x) : 첫 번째로 나오는 x 삭제
# 리스트를 바꾸며, x가 리스트에 존재하지 않으면 오류 발생
a=[1,2,3,4,5]
a.remove(3)
# print(a) ## [1,2,4,5]
# a.remove(3)
# print(a) ## Error! 이젠 x가 list 안에 없어서

# 리스트 요소 끄집어내기
# pop() : 리스트의 맨 마지막 요소를 돌려주고 그 요소는 삭제
a = [1,2,3]
# print(a.pop()) ## 3
# print(a) ## [1,2]

# 리스트 확장 
# extend(x) : x == list. 원래의 a 리스트에 x 리스트를 더하게 된다.
a=[1,2,3]
a.extend([4,5])
# print(a) ## [1,2,3,4,5]
b=[6,7]
a.extend(b)
# print(a)  ## [1,2,3,4,5,6,7]

'''
    a.extend([4,5]) += [4,5]와 동일하다.

'''






